export const samplePRDContent = `
<h1>Product Requirements Document</h1>
<p><em>Generated by BuildBridge AI</em></p>

<h2>1. Executive Summary</h2>
<p>This document outlines the requirements for a modern SaaS application designed to transform user ideas into production-ready development artifacts. The platform will serve product teams, solo founders, and development agencies looking to accelerate their development workflow.</p>

<h3>1.1 Product Vision</h3>
<p>To become the industry-standard tool for rapid prototyping and development planning, reducing the time from concept to code by 70%.</p>

<h3>1.2 Success Metrics</h3>
<ul>
  <li>Time to first PRD: &lt; 5 minutes</li>
  <li>Artifact generation accuracy: &gt; 90%</li>
  <li>User satisfaction score: &gt; 4.5/5</li>
  <li>Monthly active teams: 10,000+ by Q4 2025</li>
</ul>

<h2>2. User Personas</h2>

<h3>2.1 Solo Founder (Primary)</h3>
<p><strong>Background:</strong> Technical founder with limited resources looking to validate ideas quickly.</p>
<p><strong>Goals:</strong></p>
<ul>
  <li>Ship MVPs in weeks, not months</li>
  <li>Maintain consistent quality across projects</li>
  <li>Generate comprehensive documentation</li>
</ul>
<p><strong>Pain Points:</strong></p>
<ul>
  <li>Spending too much time on planning vs building</li>
  <li>Difficulty maintaining consistency across artifacts</li>
  <li>Context switching between tools</li>
</ul>

<h3>2.2 Product Manager (Secondary)</h3>
<p><strong>Background:</strong> Non-technical PM working with engineering teams.</p>
<p><strong>Goals:</strong></p>
<ul>
  <li>Communicate requirements clearly to developers</li>
  <li>Keep stakeholders aligned on scope</li>
  <li>Track dependencies visually</li>
</ul>

<h2>3. Core Features</h2>

<h3>3.1 Module Canvas</h3>
<p><strong>Description:</strong> Interactive visual workspace where users design project architecture by adding, removing, and connecting feature modules.</p>

<p><strong>Key Capabilities:</strong></p>
<ul>
  <li>Drag-and-drop module library with 50+ pre-built components</li>
  <li>Real-time status tracking (Include/Exclude/Maybe)</li>
  <li>Dependency visualization with directional edges</li>
  <li>Snap-to-grid alignment for clean layouts</li>
  <li>Export as JSON for version control</li>
</ul>

<p><strong>User Stories:</strong></p>
<ul>
  <li>As a user, I want to add an "Authentication" module so I can include user login in my project</li>
  <li>As a user, I want to mark modules as "Maybe" so I can decide later whether to include them</li>
  <li>As a user, I want to draw edges between modules so I can visualize dependencies</li>
</ul>

<h3>3.2 AI-Powered PRD Generation</h3>
<p><strong>Description:</strong> Automatically generate comprehensive Product Requirements Documents from module selections and brief descriptions.</p>

<p><strong>Key Capabilities:</strong></p>
<ul>
  <li>GPT-4 powered analysis of module graph</li>
  <li>Structured output with executive summary, user personas, features, and technical specs</li>
  <li>Read-only Tiptap viewer with professional formatting</li>
  <li>One-click export to Markdown</li>
  <li>Regeneration on module graph changes</li>
</ul>

<h3>3.3 Backend Specification</h3>
<p><strong>Description:</strong> Detailed database schema, API endpoints, and background jobs derived from PRD.</p>

<p><strong>Output Includes:</strong></p>
<ul>
  <li>Entity-Relationship Diagram (Mermaid format)</li>
  <li>Prisma schema with all models and relations</li>
  <li>REST/GraphQL API endpoint definitions</li>
  <li>Job queue specifications for async tasks</li>
  <li>Security considerations and RLS policies</li>
</ul>

<h3>3.4 Frontend Specification</h3>
<p><strong>Description:</strong> Component hierarchy, routing structure, and state management strategy.</p>

<p><strong>Output Includes:</strong></p>
<ul>
  <li>Next.js route structure</li>
  <li>React component tree with prop interfaces</li>
  <li>State management recommendations (Context, Zustand, Redux)</li>
  <li>API integration points</li>
  <li>Form validation schemas</li>
</ul>

<h3>3.5 Prompt Pack Export</h3>
<p><strong>Description:</strong> AI-optimized prompt bundles for Cursor, Claude Code, Lovable, and Bolt.new.</p>

<p><strong>Formats:</strong></p>
<ul>
  <li><strong>Cursor:</strong> .cursorrules format with ERD, user stories, and tech stack</li>
  <li><strong>Claude Code:</strong> Workflow-optimized with step-by-step implementation guide</li>
  <li><strong>Lovable:</strong> Frontend-focused with design system and component specs</li>
  <li><strong>Bolt.new:</strong> Full-stack rapid prototyping format</li>
</ul>

<h2>4. Technical Architecture</h2>

<h3>4.1 Tech Stack</h3>
<ul>
  <li><strong>Frontend:</strong> Next.js 14, React 18, TypeScript, Tailwind CSS, shadcn/ui</li>
  <li><strong>Backend:</strong> Next.js API Routes, Prisma ORM, PostgreSQL</li>
  <li><strong>AI:</strong> OpenAI GPT-4, Anthropic Claude 3.5 Sonnet</li>
  <li><strong>Infrastructure:</strong> Vercel (hosting), Supabase (database + auth), Redis (job queue)</li>
</ul>

<h3>4.2 Data Model</h3>
<p>Core entities include Project, ProjectGraph, Artifact (PRD, BackendSpec, etc.), Event (for audit trail), and DecisionLog.</p>

<h3>4.3 Event-Sourced Reconciliation</h3>
<p>When modules change, the system:</p>
<ol>
  <li>Emits <code>ModuleAdded/Removed/Updated</code> events</li>
  <li>Triggers reconciliation engine with dependency DAG</li>
  <li>Regenerates affected artifacts in order: Research → PRD → Backend → Frontend → UI → Mermaid → Prompts</li>
  <li>Runs invariant checks to ensure consistency</li>
</ol>

<h2>5. User Flow</h2>

<h3>5.1 Onboarding</h3>
<ol>
  <li>User signs up with email/Google</li>
  <li>Guided tour of Module Canvas</li>
  <li>Sample project pre-loaded</li>
  <li>First PRD generated in 30 seconds</li>
</ol>

<h3>5.2 Typical Session</h3>
<ol>
  <li>User creates new project from dashboard</li>
  <li>Enters title and elevator pitch in Settings</li>
  <li>Opens Canvas and adds modules (Auth, User Profile, Dashboard, etc.)</li>
  <li>Draws edges to show "Dashboard depends on Auth"</li>
  <li>Marks some modules as "Maybe" for later consideration</li>
  <li>Clicks "Regenerate" to trigger AI pipeline</li>
  <li>Reviews PRD in Tiptap viewer</li>
  <li>Navigates to Artifacts to see ERD and download Cursor prompt pack</li>
  <li>Exports ui-spec.json for Figma plugin</li>
</ol>

<h2>6. Non-Functional Requirements</h2>

<h3>6.1 Performance (NFR-Perf)</h3>
<ul>
  <li><strong>p95 Latency:</strong> Read operations &lt; 400ms, Write operations &lt; 800ms</li>
  <li><strong>Uptime:</strong> 99.9% monthly for core APIs (auth, project fetch, canvas operations)</li>
  <li><strong>Cold Start:</strong> App shell &lt; 1.5s, PRD generation &lt; 10s, Full artifact pipeline &lt; 30s</li>
  <li><strong>Scalability:</strong> Support 10k → 100k DAU without architectural changes</li>
</ul>

<h3>6.2 Security & Privacy (NFR-Sec)</h3>
<ul>
  <li><strong>Data Classification:</strong> PII (email, name), Project Data (public), API Keys (secret)</li>
  <li><strong>Encryption:</strong> TLS 1.2+ in transit, AES-256 at rest</li>
  <li><strong>Authentication:</strong> Supabase Auth with email/password and OAuth (Google)</li>
  <li><strong>Access Control:</strong> Row-Level Security (RLS) on all database tables; users can only access their own projects</li>
  <li><strong>Audit Logging:</strong> Track project creation, PRD generation, artifact exports</li>
  <li><strong>Data Retention:</strong> 24 months default; user-initiated deletion within 30 days</li>
  <li><strong>Compliance:</strong> GDPR-compliant data handling, SOC 2 preparation (future)</li>
</ul>

<h3>6.3 Accessibility (NFR-A11y)</h3>
<ul>
  <li><strong>WCAG 2.1 AA Compliance:</strong> All interactive elements meet contrast and size requirements</li>
  <li><strong>Text Size:</strong> Default 16-18pt for body text, scalable up to 200%</li>
  <li><strong>Tap Targets:</strong> Minimum 44×44 pixels for all buttons and interactive elements</li>
  <li><strong>Keyboard Navigation:</strong> Full keyboard support for canvas operations (arrow keys, Tab, Enter)</li>
  <li><strong>Color Contrast:</strong> 4.5:1 minimum for normal text, 3:1 for large text</li>
  <li><strong>Screen Reader Support:</strong> ARIA labels and live regions for dynamic content</li>
  <li><strong>Focus Indicators:</strong> Visible focus rings on all interactive elements</li>
</ul>

<h2>7. Responsible AI</h2>

<h3>7.1 Explainability</h3>
<p>All AI-generated content includes a "How this was created" section explaining inputs used (user personas, competitive analysis, features) to derive recommendations.</p>

<h3>7.2 Bias Review</h3>
<p>PRD generation prompts explicitly instruct models to avoid exclusion by gender, race, age, or ability. Regular audits of generated content for bias patterns.</p>

<h3>7.3 Hallucination Guards</h3>
<p>All module suggestions are gated by predefined templates and categories. AI cannot invent medical advice, security vulnerabilities, or unvetted technical recommendations.</p>

<h3>7.4 Language Support</h3>
<p>English (primary); Spanish support planned for Q2 2025.</p>

<h2>8. Release Plan</h2>

<h3>8.1 Beta Cohort</h3>
<p>50 technical founders and product teams; 4-week beta period with weekly feedback sessions.</p>

<h3>8.2 Pricing</h3>
<ul>
  <li><strong>Free Tier:</strong> 3 projects, basic artifacts</li>
  <li><strong>Pro ($19/month):</strong> Unlimited projects, all AI features, priority support</li>
  <li><strong>Team ($49/month):</strong> 5 seats, real-time collaboration, custom templates</li>
</ul>

<h3>8.3 Support</h3>
<ul>
  <li><strong>Email Support:</strong> 24-48h response time</li>
  <li><strong>In-app Chat:</strong> Office hours Mon-Fri 9am-5pm PT</li>
  <li><strong>Documentation:</strong> Comprehensive guides and video tutorials</li>
</ul>

<h3>8.4 Phased Rollout</h3>
<ul>
  <li><strong>Phase 1 (Current):</strong> Module Canvas, PRD Generation, Basic export, RAG research</li>
  <li><strong>Phase 2 (Q1 2025):</strong> Real-time collaboration, Version history, Custom templates</li>
  <li><strong>Phase 3 (Q2 2025):</strong> API access, Community marketplace, GitHub/GitLab integration</li>
</ul>

<h2>9. Risk Register</h2>

<table border="1" style="border-collapse: collapse; width: 100%;">
  <thead>
    <tr>
      <th>Risk</th>
      <th>Impact</th>
      <th>Likelihood</th>
      <th>Mitigation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>AI generates incorrect or harmful PRD content</td>
      <td>High</td>
      <td>Med</td>
      <td>Template-gated outputs, human review for safety-critical features, clear disclaimers on AI limitations</td>
    </tr>
    <tr>
      <td>API cost overruns from OpenAI usage</td>
      <td>Med</td>
      <td>Med</td>
      <td>Token limits per request (16k max), caching for repeated queries, usage-based pricing tier</td>
    </tr>
    <tr>
      <td>Low user adoption (< 100 MAU by Q1)</td>
      <td>High</td>
      <td>Low</td>
      <td>Beta feedback loop, referral program, content marketing via dev communities</td>
    </tr>
    <tr>
      <td>Competitor launches similar product</td>
      <td>Med</td>
      <td>High</td>
      <td>Speed to market, focus on dev workflow integration, unique RAG research feature</td>
    </tr>
    <tr>
      <td>Supabase service outage</td>
      <td>High</td>
      <td>Low</td>
      <td>Read replicas, graceful degradation, status page, SLA monitoring</td>
    </tr>
  </tbody>
</table>

<h2>10. Data Model & Architecture</h2>

<h3>10.1 Core Entities</h3>
<ul>
  <li><strong>User:</strong> id, email, name, createdAt, subscription_tier</li>
  <li><strong>Project:</strong> id, user_id, title, pitch, platforms, status, wizardData, createdAt</li>
  <li><strong>ProjectGraph:</strong> id, project_id, graphData (JSON: nodes[], edges[]), createdAt</li>
  <li><strong>Artifact:</strong> id, project_id, type (PRD|BackendSpec|FrontendSpec|UISpec|CursorPack), content (JSON), version, createdAt</li>
  <li><strong>Event:</strong> id, project_id, type, payload, createdAt (for audit trail)</li>
</ul>

<h3>10.2 Critical Invariants</h3>
<ul>
  <li>Every Artifact MUST reference a valid Project</li>
  <li>ProjectGraph nodes MUST have unique IDs within the graph</li>
  <li>Users can only access Projects where user_id matches (enforced via RLS)</li>
  <li>Artifact version increments on regeneration; old versions retained for rollback</li>
  <li>All Events MUST be immutable (append-only log)</li>
</ul>

<h2>11. Open Questions</h2>
<ul>
  <li>Should we support custom LLM providers (Azure OpenAI, AWS Bedrock) for enterprise customers?</li>
  <li>What's the threshold for "complex project" that requires manual review vs auto-generation?</li>
  <li>Do users need editable PRDs or is AI regeneration sufficient for iterations?</li>
  <li>Should we build iOS/Android apps or focus on progressive web app (PWA) for mobile?</li>
</ul>

<hr />

<p><em>This PRD was generated by BuildBridge AI on ${new Date().toLocaleDateString()}. For questions, contact the product team.</em></p>
`;
